{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACfM;AACM;AACF;AACA;AACJ;AAEuB;IAYnD,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AClBkC;AAEpB;AACO;AACM;AACkB;IAU5D,SAAS,SAAT,SAAS;IAYpB,YACS,eAAgC,EAC/B,MAAc,EAAU,KAAqB,EAC7C,WAA4B;QAF7B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAC7C,gBAAW,GAAX,WAAW,CAAiB;QAbtC,YAAO,GAAG,QAAQ,CAAC;QAGnB,gBAAW,GAA0B;YACnC,gEAAgE;YAChE,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;SAChB,CAAC;QAOA,uEAAuE;QACvE,sDAAsD;IACxD,CAAC;IAED,QAAQ,CAAC,KAAK,EAAE,QAAQ;QACtB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,QAAQ;QACnB,IAAI,CAAC,IAAI,GAAG,kDAAgB,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,qEACQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;aAClE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;gBACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aAC1B;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,+DAA+D;IACzD,qBAAqB;;YACzB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EAAE,gDAAgD;gBACzD,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,qBAAqB,GAAG,gEACL,CAAC,kDAAgB,EAAE,CAAC,WAAW,CAAC;iCACrD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gCACZ,MAAM,CAAC,KAAK,CACV,wDAAwD,CACzD,CAAC;4BACJ,CAAC,CAAC;iCACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gCACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;4BAC9B,CAAC,CAAC,CAAC;4BACL,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wBAClC,CAAC;qBACF;oBACD;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC;KAAA;IAEK,sBAAsB,CAAC,KAAK,EAAE,QAAQ;;YAC1C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EACL,iGAAiG;gBACnG,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,IAAI,GAAG,kDAAgB,EAAE,CAAC;4BAC/B,IAAI,CAAC,aAAa,GAAG,yEACY,CAC7B,IAAI,CAAC,IAAI,EACT,KAAK,CAAC,KAAK,EACX,QAAQ,CAAC,KAAK,CACf;iCACA,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;gCACvB,YAAY;gCACZ,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;gCACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gCAElB,IAAI,CAAC,qBAAqB,GAAG,gEACL,CAAC,kDAAgB,EAAE,CAAC,WAAW,CAAC;qCACrD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;oCACZ,MAAM,CAAC,KAAK,CACV,uCAAuC,CACxC,CAAC;gCACJ,CAAC,CAAC;qCACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;oCACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gCAC9B,CAAC,CAAC,CAAC;gCAEL,MAAM;4BACR,CAAC,CAAC;iCACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gCACf,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;gCAC7B,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gCACnC,KAAK;4BACP,CAAC,CAAC,CAAC;wBACP,CAAC;qBACF;oBACD;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC;KAAA;CACF;;YAzJQ,2DAAe;YACA,mDAAM;YAAtB,2DAAc;YACd,gFAAe;;AAUV,SAAS;IAPrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,2NAA8B;;KAE/B,CAAC;IAEF,kCAAkC;GACrB,SAAS,CA6IrB;AA7IqB;;;;;;;;;;;;;;;;;;;;;ACfqB;AACc;AACX;AACiC;AAE/E,MAAM,EAAE,GAAG,gEAAY,EAAE,CAAC;IAKb,eAAe,SAAf,eAAe;IAQ1B,YAAoB,MAAc,EAAU,KAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAErE,UAAU,CAAC,KAAK,EAAE,QAAQ;QACxB,IAAI,CAAC,IAAI,GAAG,kDAAoB,EAAE,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,yEACY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;aACtE,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;YACvB,YAAY;YACZ,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,CAAC,qBAAqB,GAAG,gEACL,CAAC,kDAAoB,EAAE,CAAC,WAAW,CAAC;iBACzD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,MAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;YACxD,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YAEL,MAAM;QACR,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAC7B,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;YACnC,KAAK;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,SAAS,CAAC,KAAK,EAAE,QAAQ;QACvB,IAAI,CAAC,IAAI,GAAG,kDAAoB,EAAE,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,qEACQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;aAClE,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;gBACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aAC1B;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,+BAA+B;gBAC/B,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,kDAAoB,EAAE,CAAC,WAAW,CAAC;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,qBAAqB,GAAG,gEACL,CAAC,kDAAoB,EAAE,CAAC,WAAW,CAAC;aACzD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;QACzE,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,iBAAiB,GAAG,iEACA,CAAC,kDAAoB,EAAE,EAAE,KAAK,CAAC;aACrD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;QACzE,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAEK,mBAAmB,CAAC,IAAI;;YAC5B,MAAM,aAAa,GAAG,MAAM,2DAAO,CAAC,8DAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;YAC1D,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IACK,yBAAyB,CAAC,IAAI,EAAE,IAAI;;YACxC,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,0DAAM,CAAC,8DAAU,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;oBAChD,IAAI;iBACL,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;aACtD;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC;aAC7C;QACH,CAAC;KAAA;IACD,4BAA4B;IAC5B,CAAC;IACD,4BAA4B;IAC5B,CAAC;CACF;;YA5GwB,mDAAM;YAAtB,2DAAc;;AASV,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAmG3B;AAnG2B;;;;;;;;;;;;;;;ACV5B,iEAAe,4zEAA4zE","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/services/firebase/firebase.service.ts","./src/app/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { LoginPage } from './login.page';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, Injectable, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/auth';\nimport { ToastController } from '@ionic/angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FirebaseService} from '../../services/firebase/firebase.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.page.html',\n  styleUrls: ['login.page.scss'],\n})\n\n//const auth = firebase.getAuth();\nexport class LoginPage {\n  sendEmailVerification: any;\n  segment = 'Log-in';\n  firebaseLogin: any;\n  auth: any;\n  dataExample: {[id: string]: string}= {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    name: '',\n    town: '',\n    phoneNumber: ''\n  };\n\n  constructor(\n    public toastController: ToastController,\n    private router: Router, private route: ActivatedRoute,\n    private firebaseSrv: FirebaseService\n  ) {\n    //this.firebaseSrv.setSimpleCollectionByPath('News', this.dataExample);\n    //console.log(this.firebaseSrv.getDataByPath('test'));\n  }\n\n  register(email, password) {\n    this.presentToastWhenSignIn(email, password);\n  }\n\n  login(email, password) {\n    this.auth = firebase.getAuth();\n    this.firebaseLogin = firebase\n      .signInWithEmailAndPassword(this.auth, email.value, password.value)\n      .then((res) => {\n        if (this.auth.currentUser.emailVerified) {\n          this.router.navigate([`/dashboard-tab`]);\n          console.log('logged in');\n        } else {\n          console.log(this.auth);\n          this.presentToastWhenLogIn();\n          return false;\n        }\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n  // deux pop-up pour l'envoie de courriel lorsque cree et logger\n  async presentToastWhenLogIn() {\n    const toast = await this.toastController.create({\n      header: 'Compte non vérifié',\n      message: 'Voulez-vous recevoir un email de confirmation?',\n      icon: 'mail',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Oui',\n          role: 'confirm',\n          handler: () => {\n            this.sendEmailVerification = firebase\n              .sendEmailVerification(firebase.getAuth().currentUser)\n              .then((res) => {\n                window.alert(\n                  'Un message à été envoyé à votre courriel correspondant'\n                );\n              })\n              .catch((error) => {\n                window.alert(error.message);\n              });\n            console.log('Favorite clicked');\n          },\n        },\n        {\n          text: 'Non',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          },\n        },\n      ],\n    });\n    await toast.present();\n\n    const { role } = await toast.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentToastWhenSignIn(email, password) {\n    const toast = await this.toastController.create({\n      header: 'Création de compte',\n      message:\n        'Voulez vous vraiment crée cotre compte? Un courriel de confirmation sera automatiquement envoyé',\n      icon: 'email',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Oui',\n          role: 'confirm',\n          handler: () => {\n            this.auth = firebase.getAuth();\n            this.firebaseLogin = firebase\n              .createUserWithEmailAndPassword(\n                this.auth,\n                email.value,\n                password.value\n              )\n              .then((userCredential) => {\n                // Signed in\n                const user = userCredential.user;\n                console.log(user);\n\n                this.sendEmailVerification = firebase\n                  .sendEmailVerification(firebase.getAuth().currentUser)\n                  .then((res) => {\n                    window.alert(\n                      'Confirmation de l\\'envoie du courriel'\n                    );\n                  })\n                  .catch((error) => {\n                    window.alert(error.message);\n                  });\n\n                // ...\n              })\n              .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // ..\n              });\n          },\n        },\n        {\n          text: 'Non',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          },\n        },\n      ],\n    });\n    await toast.present();\n\n    const { role } = await toast.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as firebaseAuth from 'firebase/auth';\nimport { getFirestore, collection, addDoc, getDocs } from 'firebase/firestore';\n\nconst db = getFirestore();\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  sendEmailVerification: any;\n  sendPasswordReset: any;\n  firebaseLogin: any;\n  auth: any;\n  isAuth: any;\n  aFirestore: any;\n\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  signInUser(email, password) {\n    this.auth = firebaseAuth.getAuth();\n    this.firebaseLogin = firebaseAuth\n      .createUserWithEmailAndPassword(this.auth, email.value, password.value)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user);\n\n        this.sendEmailVerification = firebaseAuth\n          .sendEmailVerification(firebaseAuth.getAuth().currentUser)\n          .then((res) => {\n            window.alert('Confirmation de l\\'envoie du courriel');\n          })\n          .catch((error) => {\n            window.alert(error.message);\n          });\n\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // ..\n      });\n  }\n  loginUser(email, password) {\n    this.auth = firebaseAuth.getAuth();\n    this.firebaseLogin = firebaseAuth\n      .signInWithEmailAndPassword(this.auth, email.value, password.value)\n      .then((res) => {\n        if (this.auth.currentUser.emailVerified) {\n          this.router.navigate([`/dashboard-tab`]);\n          console.log('logged in');\n        } else {\n          console.log(this.auth);\n          //this.presentToastWhenLogIn();\n          return false;\n        }\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n  userAuthInfo() {\n    this.isAuth = firebaseAuth.getAuth().currentUser;\n    return this.isAuth;\n  }\n  sendEmailConfirmation() {\n    this.sendEmailVerification = firebaseAuth\n      .sendEmailVerification(firebaseAuth.getAuth().currentUser)\n      .then((res) => {\n        window.alert('Un message à été envoyé à votre courriel correspondant');\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n  sendEmailRecovery(email) {\n    this.sendPasswordReset = firebaseAuth\n      .sendPasswordResetEmail(firebaseAuth.getAuth(), email)\n      .then((res) => {\n        window.alert('Un message à été envoyé à votre courriel correspondant');\n      })\n      .catch((error) => {\n        window.alert(error.message);\n      });\n  }\n\n  async getCollectionByPath(path) {\n    const querySnapshot = await getDocs(collection(db, path));\n    querySnapshot.forEach((doc) => {\n      console.log(`${doc.id} => ${JSON.stringify(doc.data())}`);\n    });\n  }\n  async setSimpleCollectionByPath(path, data) {\n    try {\n      const docRef = await addDoc(collection(db, path), {\n        data\n      });\n      console.log('Document written with ID: ', docRef.id);\n    } catch (e) {\n      console.error('Error adding document: ', e);\n    }\n  }\n  deleteSimpleCollectionByPath(){\n  }\n  updateSimpleCollectionByPath(){\n  }\n}\n","export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">Compte</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-segment [(ngModel)]=\\\"segment\\\" value=\\\"Log-in\\\">\\n      <ion-segment-button value=\\\"Sign-up\\\">\\n        <ion-label>Création</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"Log-in\\\">\\n        <ion-label>Connexion</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [ngSwitch]=\\\"segment\\\">\\n  <ion-card *ngSwitchCase=\\\"'Log-in'\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Courriel</ion-label>\\n      <ion-input type=\\\"text\\\" #email required></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Mot de passe</ion-label>\\n      <ion-input type=\\\"password\\\" #password required></ion-input>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button\\n          type=\\\"submit\\\"\\n          (click)=\\\"login(email, password)\\\"\\n          expand=\\\"block\\\"\\n          >Se connecter</ion-button\\n        >\\n        <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"small-text\\\"\\n          >Mot de passe oublié?</a\\n        >\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n  <form>\\n    <ion-card *ngSwitchCase=\\\"'Sign-up'\\\">\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Prénom</ion-label>\\n        <ion-input type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Nom</ion-label>\\n        <ion-input type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Courriel</ion-label>\\n        <ion-input type=\\\"text\\\" #email required></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Mot de passe</ion-label>\\n        <ion-input type=\\\"password\\\" #password required></ion-input>\\n      </ion-item>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-button\\n            (click)=\\\"register(email, password)\\\"\\n            type=\\\"submit\\\"\\n            expand=\\\"block\\\"\\n            >Création de compte</ion-button\\n          >\\n        </ion-col>\\n      </ion-row>\\n    </ion-card>\\n  </form>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}